sed全名叫stream editor, 流编辑器, 用程序的方式来编辑文本, 基本上就是玩正则模式匹配

1. 用s命令替换
sed "s/my/Hao Chen's/g" pets.txt
s表示替换命令, /my表示匹配my, /Hao Chen's表示把匹配替换成Hao Chen's, /g表示替换所有匹配
注意:
  上面的sed命令只是将处理后的内容输出，并没有写入文件, 如要写入, 可使用重定向
    sed "s/my/Hao Chen's/g" pets.txt > hao_pets.txt
    或者使用-i参数直接修改文件内容
    sed -i "s/my/Hao Chen's/g" pets.txt
2. 在每一行前面加点东西
sed 's/^/#/g' pets.txt
3. 在每一行后面加点东西
sed 's/$/ --- /g' pets.txt
4. 替换指定行的内容
sed "3s/my/your/g" pets.txt  替换第3行
sed "3,6s/my/your/g" pets.txt  替换3到6行
5. 替换匹配的第几个
sed 's/s/S/1' my.txt  只替换每一行的第一个s
sed 's/s/S/2' my.txt  只替换每一行的第二个s
sed 's/s/S/3g' my.txt  替换每一行的第3个以后的s
6. 多个匹配
sed '1,3s/my/your/g; 3,$s/This/That/g' my.txt
等价于:
sed -e '1,3s/my/your/g' -e '3,$s/This/That/g' my.txt
7. 变量
sed 's/my/[&]/g' my.txt  使用&来当做被匹配的变量
sed 's/This is my \([^,]*\),.*is \(.*\)/\1:\2/g' my.txt
圆括号括起来的正则表达式所匹配的字符串可以当成变量来使用, 使用\1, \2来表示
This is my cat, my cat's name is betty  ->  cat:betty

正则表达式:
^ 表示一行的开头, 如: /^#/ 以#开头的匹配 
$ 表示一行的结尾, 如: /}$/ 以}结尾的匹配 
\< 表示词首,  如: \<abc 以abc 为首的詞
\> 表示词尾,  如: abc\> 以abc 結尾的詞 
. 表示任何单个字符
* 表示某个字符出现了0次或多次, 
[ ] 字符集合. 如: [abc] 表示匹配a或b或c，还有 [a-zA-Z] 表示匹配所有的26个字符.如果其中有^表示反，如 [^a] 表示非a的字符

例子: html.txt
<b>This</b> is what <span style="text-decoration: underline;">I</span> meant. Understand?
sed 's/<.*>//g' html.txt
-> meant. Understand?
sed 's/<[^>]*>//g' html.txt
This is what I meant. Understand?

