git跟踪或取消跟踪:
git rm --cached readme.txt  删除readme.txt的跟踪，并保留在本地
git rm -f readme.txt  删除readme.txt的跟踪，并且删除本地文件

git add .    监控工作区的状态树，会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件
git add -u    仅监控已经被add的文件(即tracked file)，会将被修改的文件提交到暂存区，不会提交新文件(untracked file)
git add -A    git add --all的缩写，上面两个功能的合集

git config --global core autocrlf true:
true  -->  添加文件到仓库时, git 视其为文本文件, 将crlf变成lf
false  -->  line-endings不做转换操作, 文本文件保持原样
input  -->  添加文件到仓库时将crlf变成lf, check代码时也是lf, 在windows系统下不使用这个设置

远程覆盖本地
git fetch --all
git reset --hard origin/master

测试是否ssh成功连接
ssh -vT git@github.com

查看master分支所有提交
> git rev-list master
显示前10个
> git rev-list master --max-count=10

git clone下载内容过大解决方法(--depth):
depth用于指定克隆深度, 为1即表示只克隆最近一次commit
只会把默认分支clone下来, 其他远程分支并不在本地, 需要用如下方法拉取其他分支
> git clone --depth 1 https:/github.com/someone/example.git
> git remote set-branches origin 'remote_branch_name'
> git fetch --depth 1 origin remote_branch_name
> git checkout remote_branch_name

