查看当前系统unit:
# 列出正在运行的unit
systemctl list-units
# 列出所有unit,包括没有找到配置文件的或者启动失败的
systemctl list-units --all
# 列出所有没有运行的unit
systemctl list-units --all --state=inactive
# 列出所有加载失败的unit
systemctl list-units --failed
# 列出所有正在运行、类型为service的unit
systemctl list-units --type=service
# 查看服务状态
systemctl status httpd.service  服务详细信息
systemctl is-active httpd.service  仅显示是否Active
# 查看unit配置文件内容
systemctl cat docker.service

查看unit的状态
enabled  已建立启动链接
disabled  没建立启动链接
static   该配置文件没有[Install]部分(无法执行),只能作为其他配置文件的依赖
masked    该配置文件被禁止启动链接
# 显示系统状态
systemctl status
# 显示单个unit的状态
systemctl status bluetooth.service
# 显示远程主机的某个unit的状态
systemctl -H root@rhel7.example.com status httpd.service

unit的管理
# 立即启动一个服务
systemctl start apache.service
# 立即停止一个服务
systemctl stop apache.service
# 重启一个服务
systemctl restart apache.service
# 杀死一个服务的所有子进程
systemctl kill apache.service
# 重新加载一个服务的配置文件
systemctl reload apache.service
# 重新加载所有修改过的配置文件
systemctl daemon-reload
# 显示某个unit的所有底层参数
systemctl show httpd.service
# 显示某个unit指定属性的值
systemctl show -p CPUShares httpd.service
# 设置某个unit的指定属性
systemctl set-property httpd.service CPUShares=500

查看unit的依赖关系
# 列出一个unit的所有依赖，默认不会列出target类型
systemctl list-dependencies nginx.service
# 列出一个unit的所有依赖，包括target类型
systemctl list-dependencies --all nginx.service

服务的生命周期
# 服务的激活
systemctl enable : 在/etc/systemd/system/ 建立服务的符号链接，指向/usr/lib/systemd/system/中
systemctl start : 依次启动定义在unit文件中的ExecStartPre、ExecStart和ExecStartPost命令
# 服务的启动和停止
systemctl start
systemctl stop
systemctl restart
systemctl kill
# 服务的开机启动和取消
systemctl enable
systemctl disable
# 服务的修改和移除
systemctl daemon-reload : Systemd 会将 Unit 文件的内容写到缓存中，因此当 Unit 文件被更新时，需要告诉 Systemd 重新读取所有的 Unit 文件
systemctl reset-failed : 移除标记为丢失的 Unit 文件。在删除 Unit 文件后，由于缓存的关系，即使通过 daemon-reload 更新了缓存，在 list-units 中依然会显示标记为 not-found 的 Unit

日志管理 /etc/systemd/journald.conf
# 查看所有日志（默认情况下只保存本次启动的日志）
journalctl
# 查看内核日志（不显示应用日志）：--dmesg 或 -k
journalctl -k
# 查看系统本次启动的日志（包括内核日志和各类系统服务的控制台输出） ： --system 或 -b
journalctl -b
journalctl -b -0
# 查看上一次启动的日志（需更改设置）
journalctl -b -1
# 查看指定服务的日志：--unit 或 -u
journalctl -u docker.service
# 查看指定服务的日志
journalctl /usr/lib/systemd/systemd
# 实时滚动显示最新日志
journalctl -f
# 查看指定时间的日志
journalctl --since="2012-10-30 18:17:16"
journalctl --since="20 min ago"
journalctl --since="yesterday"
journalctl --since "2015-01-10" --until "2015-01-11 03:00"
journalctl --since 09:00 --until "1 hour ago"
# 显示尾部的最新10行日志：--lines 或 -n
journalctl -n
# 显示尾部指定行数的日志
journalctl -n 20
# 将最新的日志显示在前面
journalctl -r -u docker.service
# 改变输出的格式 --output 或-o
journalctl -r -u docker.service -o json-pretty
# 查看指定进程的日志
journalctl _PID=1
# 查看某个路径的脚本日志
journalctl /usr/bin/bash
# 查看指定用户的日志
journalctl _UID=33 --since today
# 查看某个unit的日志
journalctl -u nginx.service
journalctl -u nginx.service --since today
# 实时滚动显示某个unit最新日志
journalctl -u nginx.service -f
# 合并显示多个unit的日志
journalctl -u nginx.service -u php-fpm.service --since today
# 查看指定优先级（及其以上级别）的日志
0 emerg
1 alert
2 crit
3 err
4 warning
5 notice
6 info
7 debug
journalctl -p err -b
# 日志默认分页输出，--no-pager改为正常的标准输出
journalctl --no-pager
# 以JSON格式（单行）输出
journalctl -b -u nginx.service -o json
# 以JSON格式（多行）输出
journalctl -b -u nginx.service -o json-pretty
# 显示日志占据的硬盘空间
journalctl --disk-usage
# 指定日志文件占据的最大空间
journalctl --vacuum-size=1G
# 指定日志保存多久
journalctl --vacuum-time=1years


